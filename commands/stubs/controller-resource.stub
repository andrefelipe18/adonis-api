'use strict'

const BaseController = use('App/Controllers/Http/BaseController')
const Model = use('App/Models/${pascalCase(name)}')

class ${pascalCase(name)}Controller extends BaseController {
  /**
   * List all ${name}
   *
   * GET /${name.toLowerCase()}s
   */
  async index({ request, response }) {
    const { page, perPage } = request.get()

    const ${modelName.toLowerCase()}s = await Model.query()
      .paginate(page, perPage)

    return response.ok(${modelName.toLowerCase()}s)
  }

  /**
   * Create a new ${name}
   *
   * POST /${name.toLowerCase()}s
   */
  async store({ request, response }) {
    const data = request.only([]) // Defina as colunas a serem inseridas aqui

    const ${modelName.toLowerCase()} = await Model.create(data)

    return response.created(${modelName.toLowerCase()})
  }

  /**
   * Display a single ${name}
   *
   * GET /${name.toLowerCase()}s/:id
   */
  async show({ params, response }) {
    const { id } = params

    const ${modelName.toLowerCase()} = await Model.findOrFail(id)

    return response.ok(${modelName.toLowerCase()})
  }

  /**
   * Update a ${name}
   *
   * PUT /${name.toLowerCase()}s/:id
   */
  async update({ params, request, response }) {
    const { id } = params
    const data = request.only([]) // Defina as colunas a serem atualizadas aqui

    const ${modelName.toLowerCase()} = await Model.findOrFail(id)
    ${modelName.toLowerCase()}.merge(data)
    await ${modelName.toLowerCase()}.save()

    return response.ok(${modelName.toLowerCase()})
  }

  /**
   * Delete a ${name}
   *
   * DELETE /${name.toLowerCase()}s/:id
   */
  async destroy({ params, response }) {
    const { id } = params

    const ${modelName.toLowerCase()} = await Model.findOrFail(id)
    await ${modelName.toLowerCase()}.delete()

    return response.noContent()
  }
}

module.exports = ${pascalCase(name)}Controller
